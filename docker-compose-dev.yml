version: '3.9'

services:
    back:
        container_name: back
        restart: unless-stopped
        env_file:
            - ./.env
        build: 
            context: ./back
            args:
                NODE_ENV: DEV                       
        volumes:
            - node_modules_back:/app/node_modules
            - ./back:/app
        ports:
            - "${API_PORT}:${API_PORT}"
        environment:
            DB_HOST: db       
        depends_on:
            - db
            
    redis:
        image: redis
        container_name: redis
        ports:
        - "${REDIS_PORT}:${REDIS_PORT}"

    front:
        container_name: front
        restart: unless-stopped
        env_file:
            - ./.env
        build: 
            context: ./front
            args:
                NODE_ENV: DEV
        volumes:
            - node_modules_front:/app/node_modules
            - ./front:/app
            - ./.env:/app/.env
        ports:
            - "${CLIENT_PORT}:{CLIENT_PORT}"
        depends_on:
            - back

    db:
        container_name: db
        restart: unless-stopped
        image: postgres:15.3
        env_file:
            - ./.env
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_NAME}
            PGDATA: /data/postgres
        volumes:
            - db:/data/postgres
            - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
        ports:
            - "${DB_PORT}:${DB_PORT}"

    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4
        env_file:
            - ./.env
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        volumes:
            - pgadmin:/var/lib/pgadmin
        ports:
            - "${PGADMIN_PORT}:80"
        restart: unless-stopped

    nginx:
        image: nginx:latest
        depends_on:
            - front
            - back
        restart: always
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx/conf/dev/:/etc/nginx/conf.d/:ro
            - ./nginx/certs:/etc/nginx/ssl

volumes:
    db:
        driver: local
    node_modules_back:
        driver: local
    node_modules_front:
        driver: local
    pgadmin: 
        driver: local